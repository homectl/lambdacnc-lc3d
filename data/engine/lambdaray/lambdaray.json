{
    "programs": [
        {
            "fragmentShader": "#version 330 core\nvec4 texture2D(sampler2D s,vec2 uv) {\n    return texture(s,uv);\n}\nuniform vec2 screenSize;\nsmooth in vec2 vo1;\nout vec4 f0;\nvec3 cameraPos;\nvec3 lookAt_Float;\nvec3 upVec;\nfloat aspectRatio_Float_2_1(vec2 z0) {\n    return ((z0).y) / ((z0).x);\n}\nfloat sqrnorm_3(vec3 z0) {\n    return pow (length (z0),2.0);\n}\nmat3 viewMatrix;\nvoid main() {\n    cameraPos = vec3 (0.0,1.0,-20.0);\n    lookAt_Float = vec3 (0.0,0.0,0.0);\n    upVec = vec3 (0.2,1.0,0.0);\n    viewMatrix = mat3 (normalize (cross (upVec\n                                        ,normalize ((lookAt_Float) - (cameraPos))))\n                      ,cross (normalize ((lookAt_Float) - (cameraPos))\n                             ,normalize (cross (upVec,normalize ((lookAt_Float) - (cameraPos)))))\n                      ,normalize ((lookAt_Float) - (cameraPos)));\n    f0 = (vec4 (0.0,0.0,0.0,1.0)) + ((mod (atan ((((vec3 (0.0\n                                                         ,1.0\n                                                         ,-20.0)) + ((normalize ((viewMatrix) * (vec3 ((1.5) * (((vo1).x) - (0.5))\n                                                                                                      ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                                                                      ,1.0)))) * (0.16))) + ((normalize ((viewMatrix) * (vec3\n                                                ((1.5) * (((vo1).x) - (0.5))\n                                                ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                ,1.0)))) * ((0.0) - ((((vec3 (0.0,1.0,-20.0)) + ((normalize\n                                                ((viewMatrix) * (vec3 ((1.5) * (((vo1).x) - (0.5))\n                                                                      ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                                      ,1.0)))) * (0.16))).y) / ((normalize ((viewMatrix) * (vec3\n                                                ((1.5) * (((vo1).x) - (0.5))\n                                                ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                ,1.0)))).y))))).x\n                                                ,((vec3 (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3\n                                                ((1.5) * (((vo1).x) - (0.5))\n                                                ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                ,1.0)))) * (0.16))).z)\n                                          ,0.52359)) < (0.261799) ? vec4 (1.0\n                                                                         ,1.0\n                                                                         ,1.0\n                                                                         ,((true) ^ ((((vec3 (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3\n                                                                         ((1.5) * (((vo1).x) - (0.5))\n                                                                         ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                                         ,1.0)))) * (0.16))).y) > (0.0))) && (((sqrnorm_3 ((vec3 (0.0\n                                                                                                                                 ,1.0\n                                                                                                                                 ,-20.0)) + ((normalize ((viewMatrix) * (vec3\n                                                                         ((1.5) * (((vo1).x) - (0.5))\n                                                                         ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                                         ,1.0)))) * (0.16)))) < (pow (14.0,2.0))) && ((sqrnorm_3 ((vec3 (0.0\n                                                                                                                                        ,1.0\n                                                                                                                                        ,-20.0)) + ((normalize ((viewMatrix) * (vec3\n                                                                         ((1.5) * (((vo1).x) - (0.5))\n                                                                         ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))\n                                                                         ,1.0)))) * (0.16)))) > (pow (2.6,2.0)))) ? 1.0 : 0.0) : vec4 (0.0\n                                                                                                                                      ,0.0\n                                                                                                                                      ,1.0\n                                                                                                                                      ,((true) ^ ((((vec3 (0.0,1.0,-20.0)) + ((normalize\n                                                                                                                                      ((viewMatrix) * (vec3 ((1.5) * (((vo1).x) - (0.5))\n                                                                                                                                                            ,((1.5) * (aspectRatio_Float_2_1\n                                                                                                                                                            (screenSize))) * (((vo1).y) - (0.5))\n                                                                                                                                                            ,1.0)))) * (0.16))).y) > (0.0))) && (((sqrnorm_3\n                                                                                                                                      ((vec3 (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3\n                                                                                                                                      ((1.5) * (((vo1).x) - (0.5))\n                                                                                                                                      ,((1.5) * (aspectRatio_Float_2_1\n                                                                                                                                      (screenSize))) * (((vo1).y) - (0.5))\n                                                                                                                                      ,1.0)))) * (0.16)))) < (pow (14.0,2.0))) && ((sqrnorm_3 ((vec3\n                                                                                                                                      (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3\n                                                                                                                                      ((1.5) * (((vo1).x) - (0.5))\n                                                                                                                                      ,((1.5) * (aspectRatio_Float_2_1\n                                                                                                                                      (screenSize))) * (((vo1).y) - (0.5))\n                                                                                                                                      ,1.0)))) * (0.16)))) > (pow (2.6,2.0)))) ? 1.0 : 0.0));\n}",
            "vertexShader": "#version 330 core\nvec4 texture2D(sampler2D s,vec2 uv) {\n    return texture(s,uv);\n}\nin vec2 vi1;\nin vec2 vi2;\nsmooth out vec2 vo1;\nvoid main() {\n    gl_Position = vec4 ((vi1).x,(vi1).y,0.0,1.0);\n    vo1 = vi2;\n}",
            "programStreams": {
                "vi1": {
                    "name": "attribute_0",
                    "ty": {
                        "tag": "V2F"
                    },
                    "tag": "Parameter"
                },
                "vi2": {
                    "name": "attribute_1",
                    "ty": {
                        "tag": "V2F"
                    },
                    "tag": "Parameter"
                }
            },
            "programUniforms": {
                "screenSize": {
                    "tag": "V2F"
                }
            },
            "programInTextures": {},
            "programOutput": [
                {
                    "name": "f0",
                    "ty": {
                        "tag": "V4F"
                    },
                    "tag": "Parameter"
                }
            ],
            "geometryShader": null,
            "tag": "Program"
        }
    ],
    "samplers": [],
    "streams": [
        {
            "streamData": {
                "attribute_0": {
                    "arg0": [
                        -1,
                        -1,
                        1,
                        1,
                        -1,
                        1,
                        -1,
                        -1,
                        1,
                        -1,
                        1,
                        1
                    ],
                    "tag": "VFloatArray"
                },
                "attribute_1": {
                    "arg0": [
                        0,
                        0,
                        1,
                        1,
                        0,
                        1,
                        0,
                        0,
                        1,
                        0,
                        1,
                        1
                    ],
                    "tag": "VFloatArray"
                }
            },
            "streamPrograms": [
                0
            ],
            "streamType": {
                "attribute_0": {
                    "tag": "V2F"
                },
                "attribute_1": {
                    "tag": "V2F"
                }
            },
            "streamPrimitive": {
                "tag": "Triangles"
            },
            "tag": "StreamData"
        }
    ],
    "backend": {
        "tag": "OpenGL33"
    },
    "textures": [],
    "commands": [
        {
            "arg0": 0,
            "tag": "SetRenderTarget"
        },
        {
            "arg0": [
                {
                    "imageSemantic": {
                        "tag": "Color"
                    },
                    "tag": "ClearImage",
                    "clearValue": {
                        "arg0": {
                            "y": 0,
                            "x": 0,
                            "w": 1,
                            "z": 0.4
                        },
                        "tag": "VV4F"
                    }
                }
            ],
            "tag": "ClearRenderTarget"
        },
        {
            "arg0": 0,
            "tag": "SetProgram"
        },
        {
            "arg0": {
                "arg3": {
                    "tag": "LastVertex"
                },
                "arg2": {
                    "tag": "NoOffset"
                },
                "arg1": {
                    "tag": "PolygonFill"
                },
                "arg0": {
                    "tag": "CullNone"
                },
                "tag": "TriangleCtx"
            },
            "tag": "SetRasterContext"
        },
        {
            "arg0": {
                "accOperations": [
                    {
                        "arg1": {
                            "arg0": {
                                "y": true,
                                "x": true,
                                "w": true,
                                "z": true
                            },
                            "tag": "VV4B"
                        },
                        "arg0": {
                            "tag": "NoBlending"
                        },
                        "tag": "ColorOp"
                    }
                ],
                "tag": "AccumulationContext",
                "accViewportName": null
            },
            "tag": "SetAccumulationContext"
        },
        {
            "arg0": 0,
            "tag": "RenderStream"
        }
    ],
    "info": "generated by lambdacube-compiler 0.0.1",
    "targets": [
        {
            "renderTargets": [
                {
                    "targetSemantic": {
                        "tag": "Color"
                    },
                    "targetRef": {
                        "arg0": {
                            "tag": "Color"
                        },
                        "tag": "Framebuffer"
                    },
                    "tag": "TargetItem"
                }
            ],
            "tag": "RenderTarget"
        }
    ],
    "slots": [],
    "tag": "Pipeline"
}
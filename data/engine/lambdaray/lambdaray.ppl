Pipeline
  { info = "generated by lambdacube-compiler 0.0.1"
  , backend = OpenGL33
  , textures = []
  , samplers = []
  , targets =
      [ RenderTarget
          { renderTargets =
              [ TargetItem
                  { targetSemantic = Color , targetRef = Just (Framebuffer Color) }
              ]
          }
      ]
  , programs =
      [ Program
          { programUniforms = fromList [ ( "screenSize" , V2F ) ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "attribute_0" , ty = V2F } )
                , ( "vi2" , Parameter { name = "attribute_1" , ty = V2F } )
                ]
          , programInTextures = fromList []
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              in vec2 vi1;
              in vec2 vi2;
              smooth out vec2 vo1;
              void main() {
                  gl_Position = vec4 ((vi1).x,(vi1).y,0.0,1.0);
                  vo1 = vi2;
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform vec2 screenSize;
              smooth in vec2 vo1;
              out vec4 f0;
              vec3 cameraPos;
              vec3 lookAt_Float;
              vec3 upVec;
              float aspectRatio_Float_2_1(vec2 z0) {
                  return ((z0).y) / ((z0).x);
              }
              float sqrnorm_3(vec3 z0) {
                  return pow (length (z0),2.0);
              }
              mat3 viewMatrix;
              void main() {
                  cameraPos = vec3 (0.0,1.0,-20.0);
                  lookAt_Float = vec3 (0.0,0.0,0.0);
                  upVec = vec3 (0.2,1.0,0.0);
                  viewMatrix = mat3 (normalize (cross (upVec
                                                      ,normalize ((lookAt_Float) - (cameraPos))))
                                    ,cross (normalize ((lookAt_Float) - (cameraPos))
                                           ,normalize (cross (upVec,normalize ((lookAt_Float) - (cameraPos)))))
                                    ,normalize ((lookAt_Float) - (cameraPos)));
                  f0 = (vec4 (0.0,0.0,0.0,1.0)) + ((mod (atan ((((vec3 (0.0
                                                                       ,1.0
                                                                       ,-20.0)) + ((normalize ((viewMatrix) * (vec3 ((1.5) * (((vo1).x) - (0.5))
                                                                                                                    ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                                                                                    ,1.0)))) * (0.16))) + ((normalize ((viewMatrix) * (vec3
                                                              ((1.5) * (((vo1).x) - (0.5))
                                                              ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                              ,1.0)))) * ((0.0) - ((((vec3 (0.0,1.0,-20.0)) + ((normalize
                                                              ((viewMatrix) * (vec3 ((1.5) * (((vo1).x) - (0.5))
                                                                                    ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                                                    ,1.0)))) * (0.16))).y) / ((normalize ((viewMatrix) * (vec3
                                                              ((1.5) * (((vo1).x) - (0.5))
                                                              ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                              ,1.0)))).y))))).x
                                                              ,((vec3 (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3
                                                              ((1.5) * (((vo1).x) - (0.5))
                                                              ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                              ,1.0)))) * (0.16))).z)
                                                        ,0.52359)) < (0.261799) ? vec4 (1.0
                                                                                       ,1.0
                                                                                       ,1.0
                                                                                       ,((true) ^ ((((vec3 (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3
                                                                                       ((1.5) * (((vo1).x) - (0.5))
                                                                                       ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                                                       ,1.0)))) * (0.16))).y) > (0.0))) && (((sqrnorm_3 ((vec3 (0.0
                                                                                                                                               ,1.0
                                                                                                                                               ,-20.0)) + ((normalize ((viewMatrix) * (vec3
                                                                                       ((1.5) * (((vo1).x) - (0.5))
                                                                                       ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                                                       ,1.0)))) * (0.16)))) < (pow (14.0,2.0))) && ((sqrnorm_3 ((vec3 (0.0
                                                                                                                                                      ,1.0
                                                                                                                                                      ,-20.0)) + ((normalize ((viewMatrix) * (vec3
                                                                                       ((1.5) * (((vo1).x) - (0.5))
                                                                                       ,((1.5) * (aspectRatio_Float_2_1 (screenSize))) * (((vo1).y) - (0.5))
                                                                                       ,1.0)))) * (0.16)))) > (pow (2.6,2.0)))) ? 1.0 : 0.0) : vec4 (0.0
                                                                                                                                                    ,0.0
                                                                                                                                                    ,1.0
                                                                                                                                                    ,((true) ^ ((((vec3 (0.0,1.0,-20.0)) + ((normalize
                                                                                                                                                    ((viewMatrix) * (vec3 ((1.5) * (((vo1).x) - (0.5))
                                                                                                                                                                          ,((1.5) * (aspectRatio_Float_2_1
                                                                                                                                                                          (screenSize))) * (((vo1).y) - (0.5))
                                                                                                                                                                          ,1.0)))) * (0.16))).y) > (0.0))) && (((sqrnorm_3
                                                                                                                                                    ((vec3 (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3
                                                                                                                                                    ((1.5) * (((vo1).x) - (0.5))
                                                                                                                                                    ,((1.5) * (aspectRatio_Float_2_1
                                                                                                                                                    (screenSize))) * (((vo1).y) - (0.5))
                                                                                                                                                    ,1.0)))) * (0.16)))) < (pow (14.0,2.0))) && ((sqrnorm_3 ((vec3
                                                                                                                                                    (0.0,1.0,-20.0)) + ((normalize ((viewMatrix) * (vec3
                                                                                                                                                    ((1.5) * (((vo1).x) - (0.5))
                                                                                                                                                    ,((1.5) * (aspectRatio_Float_2_1
                                                                                                                                                    (screenSize))) * (((vo1).y) - (0.5))
                                                                                                                                                    ,1.0)))) * (0.16)))) > (pow (2.6,2.0)))) ? 1.0 : 0.0));
              }
              """
          }
      ]
  , slots = []
  , streams =
      [ StreamData
          { streamData =
              fromList
                [ ( "attribute_0"
                  , VFloatArray
                      [ -1.0
                      , -1.0
                      , 1.0
                      , 1.0
                      , -1.0
                      , 1.0
                      , -1.0
                      , -1.0
                      , 1.0
                      , -1.0
                      , 1.0
                      , 1.0
                      ]
                  )
                , ( "attribute_1"
                  , VFloatArray
                      [ 0.0
                      , 0.0
                      , 1.0
                      , 1.0
                      , 0.0
                      , 1.0
                      , 0.0
                      , 0.0
                      , 1.0
                      , 0.0
                      , 1.0
                      , 1.0
                      ]
                  )
                ]
          , streamType =
              fromList [ ( "attribute_0" , V2F ) , ( "attribute_1" , V2F ) ]
          , streamPrimitive = Triangles
          , streamPrograms = [ 0 ]
          }
      ]
  , commands =
      [ SetRenderTarget 0
      , ClearRenderTarget
          [ ClearImage
              { imageSemantic = Color , clearValue = VV4F (V4 0.0 0.0 0.4 1.0) }
          ]
      , SetProgram 0
      , SetRasterContext
          (TriangleCtx CullNone PolygonFill NoOffset LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ ColorOp NoBlending (VV4B (V4 True True True True)) ]
            }
      , RenderStream 0
      ]
  }